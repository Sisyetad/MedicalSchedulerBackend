openapi: 3.0.3
info:
  title: Medical Scheduler API
  version: 1.0.0
  description: API for scheduling medical appointments
paths:
  /api/v1/auth/{action}/:
    get:
      operationId: api_v1_auth_retrieve
      parameters:
      - in: path
        name: action
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_auth_create
      parameters:
      - in: path
        name: action
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/auth/refresh/:
    post:
      operationId: api_v1_auth_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/branches/:
    get:
      operationId: api_v1_branches_retrieve
      description: GET /branches/
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_branches_create
      description: POST /branches/
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/branches/{id}/:
    get:
      operationId: api_v1_branches_retrieve_2
      description: GET /branches/{id}/
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v1_branches_update
      description: PUT /branches/{id}/
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_branches_destroy
      description: DELETE /branches/{id}/
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/diagnosis/:
    get:
      operationId: api_v1_diagnosis_retrieve
      description: GET /diagnosis/
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_diagnosis_create
      description: POST /diagnosis/
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/diagnosis/{id}/:
    get:
      operationId: api_v1_diagnosis_retrieve_2
      description: GET /diagnosis/{pk}
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v1_diagnosis_update
      description: PUT /diagnosis/{pk}/
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v1_diagnosis_partial_update
      description: PATCH /diagnosis/{pk}
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/diagnosis/{id}/history/:
    get:
      operationId: api_v1_diagnosis_history_retrieve
      description: GET /diagnosis/{pk}/history/
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/doctors/:
    get:
      operationId: api_v1_doctors_retrieve
      description: GET /doctors/
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_doctors_create
      description: POST /doctors/
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/doctors/{id}/:
    get:
      operationId: api_v1_doctors_retrieve_2
      description: GET /doctors/{id}
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v1_doctors_update
      description: PUT /doctors/{id}
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v1_doctors_partial_update
      description: PATCH /doctors/{id}/
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_doctors_destroy
      description: DELETE /doctors/{id}
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/patients/:
    get:
      operationId: api_v1_patients_retrieve
      description: GET /patients/
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_patients_create
      description: POST /patients/
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/patients/{id}/:
    get:
      operationId: api_v1_patients_retrieve_2
      description: Get /patients/{pk}
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v1_patients_update
      description: PUT /patients/{pk}
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v1_patients_partial_update
      description: PATCH /patients/{pk}
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_patients_destroy
      description: DELETE /patients/{pk}
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/queues/:
    get:
      operationId: api_v1_queues_retrieve
      description: GET /queues/
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_queues_create
      description: POST /queues/
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/queues/{id}/:
    get:
      operationId: api_v1_queues_retrieve_2
      description: GET/queues/{pk}
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v1_queues_update
      description: PUT /queues/{pk}
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v1_queues_partial_update
      description: PATCH /patients/{pk}
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_queues_destroy
      description: DELETE /queues/{pk}
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/receptionists/:
    get:
      operationId: api_v1_receptionists_retrieve
      description: GET /receptionists/
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_receptionists_create
      description: POST /receptionists/
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/receptionists/{id}/:
    get:
      operationId: api_v1_receptionists_retrieve_2
      description: GET /receptionist/{id}
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v1_receptionists_update
      description: PUT .receptionist/{id}
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_receptionists_destroy
      description: DELETE /receptionists/{id}
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/roles/:
    get:
      operationId: api_v1_roles_retrieve
      description: GET /roles/
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_roles_create
      description: POST /roles/
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/roles/{id}/:
    put:
      operationId: api_v1_roles_update
      description: PUT /roles/id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_roles_destroy
      description: DELETE /roles/id
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/:
    get:
      operationId: api_v1_users_retrieve
      description: GET /users/
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/users/{id}/:
    get:
      operationId: api_v1_users_retrieve_2
      description: GET /users/{id}/
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v1_users_update
      description: PUT /users/{id}/
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_users_destroy
      description: DELETE /users/{id}/
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /headoffice/:
    get:
      operationId: headoffice_list
      tags:
      - headoffice
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Headoffice'
          description: ''
    post:
      operationId: headoffice_create
      tags:
      - headoffice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Headoffice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Headoffice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Headoffice'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Headoffice'
          description: ''
  /headoffice/{id}/:
    get:
      operationId: headoffice_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this headoffice model.
        required: true
      tags:
      - headoffice
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Headoffice'
          description: ''
    put:
      operationId: headoffice_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this headoffice model.
        required: true
      tags:
      - headoffice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Headoffice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Headoffice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Headoffice'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Headoffice'
          description: ''
    patch:
      operationId: headoffice_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this headoffice model.
        required: true
      tags:
      - headoffice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHeadoffice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHeadoffice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHeadoffice'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Headoffice'
          description: ''
    delete:
      operationId: headoffice_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this headoffice model.
        required: true
      tags:
      - headoffice
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Headoffice:
      type: object
      properties:
        headoffice_id:
          type: integer
          readOnly: true
        headoffice_name:
          type: string
        email:
          type: string
          format: email
        role:
          $ref: '#/components/schemas/Role'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
      required:
      - created_at
      - email
      - headoffice_id
      - is_active
      - role
      - updated_at
    PatchedHeadoffice:
      type: object
      properties:
        headoffice_id:
          type: integer
          readOnly: true
        headoffice_name:
          type: string
        email:
          type: string
          format: email
        role:
          $ref: '#/components/schemas/Role'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
    Role:
      type: object
      properties:
        role_id:
          type: integer
          readOnly: true
        role_name:
          type: string
          maxLength: 100
      required:
      - role_id
      - role_name
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
