version: "3.9"

services:
  web:
    build: .
    container_name: django_app
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      
    env_file:
      - .env
    restart: on-failure

  db:
    image: postgres:17
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      
    volumes:
      - pgdata:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    restart: on-failure

  redis:
    image: redis:7
    container_name: redis_cache
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure

  celery:
    build: .
    container_name: celery_worker
    command: celery -A medicalschedulerbackend worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    restart: on-failure
volumes:
  pgdata:
