# Generated by Django 5.2.3 on 2025-07-15 07:00

import django.db.models.deletion
import simple_history.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("Doctor", "0001_initial"),
        ("Patient", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="DiagnosisModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("diagnosis_name", models.CharField(max_length=255)),
                ("diagnosis_status", models.IntegerField(default=1)),
                ("severity_level", models.IntegerField()),
                ("related_symptomes", models.CharField()),
                ("clinical_notes", models.CharField()),
                ("medication", models.IntegerField()),
                ("visibility", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "doctor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="diagnosis",
                        to="Doctor.doctormodel",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Patient.patientmodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalDiagnosisModel",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("diagnosis_name", models.CharField(max_length=255)),
                ("diagnosis_status", models.IntegerField(default=1)),
                ("severity_level", models.IntegerField()),
                ("related_symptomes", models.CharField()),
                ("clinical_notes", models.CharField()),
                ("medication", models.IntegerField()),
                ("visibility", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="Doctor.doctormodel",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical diagnosis model",
                "verbose_name_plural": "historical diagnosis models",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
